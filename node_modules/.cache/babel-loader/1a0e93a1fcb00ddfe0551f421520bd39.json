{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\Habit-Tracker\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nfunction App() {\n  // ✅ Load habits from Local Storage\n  const [habits, setHabits] = useState(() => {\n    try {\n      const savedHabits = localStorage.getItem(\"habits\");\n      return savedHabits ? JSON.parse(savedHabits) : [];\n    } catch (error) {\n      console.error(\"Error loading habits:\", error);\n      return [];\n    }\n  });\n  const [newHabit, setNewHabit] = useState(\"\");\n\n  // ✅ Save habits to Local Storage\n  useEffect(() => {\n    try {\n      localStorage.setItem(\"habits\", JSON.stringify(habits));\n    } catch (error) {\n      console.error(\"Error saving habits:\", error);\n    }\n  }, [habits]);\n\n  // ✅ Add Habit\n  const addHabit = () => {\n    if (newHabit.trim() !== \"\") {\n      setHabits([...habits, {\n        text: newHabit,\n        completed: false,\n        streak: 0\n      }]);\n      setNewHabit(\"\"); // Clear input after adding\n    }\n  };\n\n  // ✅ Toggle Completion\n  const toggleCompletion = index => {\n    const updatedHabits = habits.map((habit, i) => {\n      if (i === index) {\n        return {\n          ...habit,\n          completed: !habit.completed\n        };\n      }\n      return habit;\n    });\n    setHabits(updatedHabits);\n  };\n\n  // ✅ Delete Habit\n  const deleteHabit = index => {\n    const updatedHabits = habits.filter((_, i) => i !== index);\n    setHabits(updatedHabits);\n  };\n\n  // ✅ Calculate Progress\n  const completedHabits = habits.filter(habit => habit.completed).length;\n  const totalHabits = habits.length;\n  const progressPercentage = totalHabits > 0 ? completedHabits / totalHabits * 100 : 0;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Habit Tracker\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    style: {\n      width: `${progressPercentage}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, Math.round(progressPercentage), \"%\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Add a new habit\",\n    value: newHabit,\n    onChange: e => setNewHabit(e.target.value),\n    className: \"input-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addHabit,\n    className: \"add-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"habit-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, habits.map((habit, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: \"habit-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: habit.completed,\n    onChange: () => toggleCompletion(index),\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: habit.completed ? \"completed\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, habit.text), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => deleteHabit(index),\n    className: \"delete-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"\\u274C\")))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","App","habits","setHabits","savedHabits","localStorage","getItem","JSON","parse","error","console","newHabit","setNewHabit","setItem","stringify","addHabit","trim","text","completed","streak","toggleCompletion","index","updatedHabits","map","habit","i","deleteHabit","filter","_","completedHabits","length","totalHabits","progressPercentage","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","width","Math","round","type","placeholder","value","onChange","e","target","onClick","key","checked"],"sources":["D:/Github/Habit-Tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n  // ✅ Load habits from Local Storage\r\n  const [habits, setHabits] = useState(() => {\r\n    try {\r\n      const savedHabits = localStorage.getItem(\"habits\");\r\n      return savedHabits ? JSON.parse(savedHabits) : [];\r\n    } catch (error) {\r\n      console.error(\"Error loading habits:\", error);\r\n      return [];\r\n    }\r\n  });\r\n\r\n  const [newHabit, setNewHabit] = useState(\"\");\r\n\r\n  // ✅ Save habits to Local Storage\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(\"habits\", JSON.stringify(habits));\r\n    } catch (error) {\r\n      console.error(\"Error saving habits:\", error);\r\n    }\r\n  }, [habits]);\r\n\r\n  // ✅ Add Habit\r\n  const addHabit = () => {\r\n    if (newHabit.trim() !== \"\") {\r\n      setHabits([...habits, { text: newHabit, completed: false, streak: 0 }]);\r\n      setNewHabit(\"\"); // Clear input after adding\r\n    }\r\n  };\r\n\r\n  // ✅ Toggle Completion\r\n  const toggleCompletion = (index) => {\r\n    const updatedHabits = habits.map((habit, i) => {\r\n      if (i === index) {\r\n        return { ...habit, completed: !habit.completed };\r\n      }\r\n      return habit;\r\n    });\r\n    setHabits(updatedHabits);\r\n  };\r\n\r\n  // ✅ Delete Habit\r\n  const deleteHabit = (index) => {\r\n    const updatedHabits = habits.filter((_, i) => i !== index);\r\n    setHabits(updatedHabits);\r\n  };\r\n\r\n  // ✅ Calculate Progress\r\n  const completedHabits = habits.filter(habit => habit.completed).length;\r\n  const totalHabits = habits.length;\r\n  const progressPercentage = totalHabits > 0 ? (completedHabits / totalHabits) * 100 : 0;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">Habit Tracker</h1>\r\n\r\n      {/* ✅ Progress Bar */}\r\n      <div className=\"progress-container\">\r\n        <div className=\"progress-bar\" style={{ width: `${progressPercentage}%` }}>\r\n          {Math.round(progressPercentage)}%\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a new habit\"\r\n          value={newHabit}\r\n          onChange={(e) => setNewHabit(e.target.value)}\r\n          className=\"input-box\"\r\n        />\r\n        <button onClick={addHabit} className=\"add-btn\">Add</button>\r\n      </div>\r\n\r\n      <ul className=\"habit-list\">\r\n        {habits.map((habit, index) => (\r\n          <li key={index} className=\"habit-item\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={habit.completed}\r\n              onChange={() => toggleCompletion(index)}\r\n              className=\"checkbox\"\r\n            />\r\n            <span className={habit.completed ? \"completed\" : \"\"}>{habit.text}</span>\r\n            <button onClick={() => deleteHabit(index)} className=\"delete-btn\">❌</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,GAAGA,CAAA,EAAG;EACb;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,MAAM;IACzC,IAAI;MACF,MAAMK,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAClD,OAAOF,WAAW,GAAGG,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,GAAG,EAAE;IACnD,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,OAAO,EAAE;IACX;EACF,CAAC,CAAC;EAEF,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,IAAI;MACFK,YAAY,CAACQ,OAAO,CAAC,QAAQ,EAAEN,IAAI,CAACO,SAAS,CAACZ,MAAM,CAAC,CAAC;IACxD,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAMa,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIJ,QAAQ,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1Bb,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE;QAAEe,IAAI,EAAEN,QAAQ;QAAEO,SAAS,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAE,CAAC,CAAC,CAAC;MACvEP,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMQ,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,aAAa,GAAGpB,MAAM,CAACqB,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;MAC7C,IAAIA,CAAC,KAAKJ,KAAK,EAAE;QACf,OAAO;UAAE,GAAGG,KAAK;UAAEN,SAAS,EAAE,CAACM,KAAK,CAACN;QAAU,CAAC;MAClD;MACA,OAAOM,KAAK;IACd,CAAC,CAAC;IACFrB,SAAS,CAACmB,aAAa,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMI,WAAW,GAAIL,KAAK,IAAK;IAC7B,MAAMC,aAAa,GAAGpB,MAAM,CAACyB,MAAM,CAAC,CAACC,CAAC,EAAEH,CAAC,KAAKA,CAAC,KAAKJ,KAAK,CAAC;IAC1DlB,SAAS,CAACmB,aAAa,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMO,eAAe,GAAG3B,MAAM,CAACyB,MAAM,CAACH,KAAK,IAAIA,KAAK,CAACN,SAAS,CAAC,CAACY,MAAM;EACtE,MAAMC,WAAW,GAAG7B,MAAM,CAAC4B,MAAM;EACjC,MAAME,kBAAkB,GAAGD,WAAW,GAAG,CAAC,GAAIF,eAAe,GAAGE,WAAW,GAAI,GAAG,GAAG,CAAC;EAEtF,oBACEjC,KAAA,CAAAmC,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxB1C,KAAA,CAAAmC,aAAA;IAAIC,SAAS,EAAC,OAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,eAAiB,CAAC,eAGxC1C,KAAA,CAAAmC,aAAA;IAAKC,SAAS,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjC1C,KAAA,CAAAmC,aAAA;IAAKC,SAAS,EAAC,cAAc;IAACO,KAAK,EAAE;MAAEC,KAAK,EAAE,GAAGV,kBAAkB;IAAI,CAAE;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtEG,IAAI,CAACC,KAAK,CAACZ,kBAAkB,CAAC,EAAC,GAC7B,CACF,CAAC,eAENlC,KAAA,CAAAmC,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9B1C,KAAA,CAAAmC,aAAA;IACEY,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,iBAAiB;IAC7BC,KAAK,EAAEpC,QAAS;IAChBqC,QAAQ,EAAGC,CAAC,IAAKrC,WAAW,CAACqC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAC7Cb,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACtB,CAAC,eACF1C,KAAA,CAAAmC,aAAA;IAAQkB,OAAO,EAAEpC,QAAS;IAACmB,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,KAAW,CACvD,CAAC,eAEN1C,KAAA,CAAAmC,aAAA;IAAIC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvBtC,MAAM,CAACqB,GAAG,CAAC,CAACC,KAAK,EAAEH,KAAK,kBACvBvB,KAAA,CAAAmC,aAAA;IAAImB,GAAG,EAAE/B,KAAM;IAACa,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpC1C,KAAA,CAAAmC,aAAA;IACEY,IAAI,EAAC,UAAU;IACfQ,OAAO,EAAE7B,KAAK,CAACN,SAAU;IACzB8B,QAAQ,EAAEA,CAAA,KAAM5B,gBAAgB,CAACC,KAAK,CAAE;IACxCa,SAAS,EAAC,UAAU;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACrB,CAAC,eACF1C,KAAA,CAAAmC,aAAA;IAAMC,SAAS,EAAEV,KAAK,CAACN,SAAS,GAAG,WAAW,GAAG,EAAG;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEhB,KAAK,CAACP,IAAW,CAAC,eACxEnB,KAAA,CAAAmC,aAAA;IAAQkB,OAAO,EAAEA,CAAA,KAAMzB,WAAW,CAACL,KAAK,CAAE;IAACa,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAS,CACzE,CACL,CACC,CACD,CAAC;AAEV;AAEA,eAAevC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}