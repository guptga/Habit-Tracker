{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\Habit-Tracker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Calendar from \"react-calendar\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale } from \"chart.js\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(BarElement, CategoryScale, LinearScale);\nfunction App() {\n  _s();\n  // ✅ Load habits from Local Storage\n  const [habits, setHabits] = useState(() => {\n    try {\n      const savedHabits = localStorage.getItem(\"habits\");\n      return savedHabits ? JSON.parse(savedHabits) : [];\n    } catch (error) {\n      console.error(\"Error loading habits:\", error);\n      return [];\n    }\n  });\n  const [newHabit, setNewHabit] = useState(\"\");\n\n  // ✅ Save habits to Local Storage\n  useEffect(() => {\n    try {\n      localStorage.setItem(\"habits\", JSON.stringify(habits));\n    } catch (error) {\n      console.error(\"Error saving habits:\", error);\n    }\n  }, [habits]);\n\n  // ✅ Add Habit\n  const addHabit = () => {\n    if (newHabit.trim() !== \"\") {\n      setHabits([...habits, {\n        text: newHabit,\n        completed: false,\n        streak: 0,\n        completedDate: null\n      }]);\n      setNewHabit(\"\");\n    }\n  };\n\n  // ✅ Toggle Completion\n  const toggleCompletion = index => {\n    setHabits(prevHabits => prevHabits.map((habit, i) => i === index ? {\n      ...habit,\n      completed: !habit.completed,\n      streak: habit.completed ? 0 : habit.streak + 1,\n      completedDate: habit.completed ? null : new Date()\n    } : habit));\n  };\n\n  // ✅ Delete Habit\n  const deleteHabit = index => {\n    setHabits(habits.filter((_, i) => i !== index));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Habit Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDD25 Habit Streaks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: habits.map(habit => habit.text),\n        datasets: [{\n          label: \"🔥 Streak Days\",\n          data: habits.map(habit => habit.streak),\n          backgroundColor: \"orange\"\n        }]\n      },\n      options: {\n        responsive: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"habit-list\",\n      children: habits.map((habit, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"habit-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: habit.completed,\n          onChange: () => toggleCompletion(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: habit.completed ? \"completed\" : \"\",\n          children: habit.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"streak\",\n          children: [\"\\uD83D\\uDD25 \", habit.streak, \" days\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteHabit(index),\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      tileContent: ({\n        date\n      }) => {\n        return habits.some(habit => habit.completedDate && new Date(habit.completedDate).toDateString() === date.toDateString()) ? \"✅\" : null;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new habit\",\n      value: newHabit,\n      onChange: e => setNewHabit(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addHabit,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XXWZHWWinI15ubpMV55pIqw/GSA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","Bar","Chart","ChartJS","BarElement","CategoryScale","LinearScale","jsxDEV","_jsxDEV","register","App","_s","habits","setHabits","savedHabits","localStorage","getItem","JSON","parse","error","console","newHabit","setNewHabit","setItem","stringify","addHabit","trim","text","completed","streak","completedDate","toggleCompletion","index","prevHabits","map","habit","i","Date","deleteHabit","filter","_","className","children","fileName","_jsxFileName","lineNumber","columnNumber","data","labels","datasets","label","backgroundColor","options","responsive","type","checked","onChange","onClick","tileContent","date","some","toDateString","placeholder","value","e","target","_c","$RefreshReg$"],"sources":["D:/Github/Habit-Tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale } from \"chart.js\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./index.css\";\r\n\r\nChartJS.register(BarElement, CategoryScale, LinearScale);\r\n\r\nfunction App() {\r\n  // ✅ Load habits from Local Storage\r\n  const [habits, setHabits] = useState(() => {\r\n    try {\r\n      const savedHabits = localStorage.getItem(\"habits\");\r\n      return savedHabits ? JSON.parse(savedHabits) : [];\r\n    } catch (error) {\r\n      console.error(\"Error loading habits:\", error);\r\n      return [];\r\n    }\r\n  });\r\n\r\n  const [newHabit, setNewHabit] = useState(\"\");\r\n\r\n  // ✅ Save habits to Local Storage\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(\"habits\", JSON.stringify(habits));\r\n    } catch (error) {\r\n      console.error(\"Error saving habits:\", error);\r\n    }\r\n  }, [habits]);\r\n\r\n  // ✅ Add Habit\r\n  const addHabit = () => {\r\n    if (newHabit.trim() !== \"\") {\r\n      setHabits([...habits, { text: newHabit, completed: false, streak: 0, completedDate: null }]);\r\n      setNewHabit(\"\");\r\n    }\r\n  };\r\n\r\n  // ✅ Toggle Completion\r\n  const toggleCompletion = (index) => {\r\n    setHabits((prevHabits) =>\r\n      prevHabits.map((habit, i) =>\r\n        i === index\r\n          ? {\r\n              ...habit,\r\n              completed: !habit.completed,\r\n              streak: habit.completed ? 0 : habit.streak + 1,\r\n              completedDate: habit.completed ? null : new Date(),\r\n            }\r\n          : habit\r\n      )\r\n    );\r\n  };\r\n\r\n  // ✅ Delete Habit\r\n  const deleteHabit = (index) => {\r\n    setHabits(habits.filter((_, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">Habit Tracker</h1>\r\n\r\n      {/* ✅ Progress Chart */}\r\n      <h2>🔥 Habit Streaks</h2>\r\n      <Bar\r\n        data={{\r\n          labels: habits.map(habit => habit.text),\r\n          datasets: [\r\n            {\r\n              label: \"🔥 Streak Days\",\r\n              data: habits.map(habit => habit.streak),\r\n              backgroundColor: \"orange\",\r\n            },\r\n          ],\r\n        }}\r\n        options={{ responsive: true }}\r\n      />\r\n\r\n      {/* ✅ Habit List */}\r\n      <ul className=\"habit-list\">\r\n        {habits.map((habit, index) => (\r\n          <li key={index} className=\"habit-item\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={habit.completed}\r\n              onChange={() => toggleCompletion(index)}\r\n            />\r\n            <span className={habit.completed ? \"completed\" : \"\"}>{habit.text}</span>\r\n            <span className=\"streak\">🔥 {habit.streak} days</span>\r\n            <button onClick={() => deleteHabit(index)}>❌</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* ✅ Calendar */}\r\n      <Calendar\r\n        tileContent={({ date }) => {\r\n          return habits.some(habit => habit.completedDate && new Date(habit.completedDate).toDateString() === date.toDateString())\r\n            ? \"✅\"\r\n            : null;\r\n        }}\r\n      />\r\n\r\n      {/* ✅ Habit Input */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add a new habit\"\r\n        value={newHabit}\r\n        onChange={(e) => setNewHabit(e.target.value)}\r\n      />\r\n      <button onClick={addHabit}>Add</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}